[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Steven Andrew Culpepper. Author, copyright holder. James Joseph Balamuta. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Culpepper, S. . Balamuta, J. J. (2019) dina: Bayesian Estimation DINA Model. URL https://cran.r-project.org/package=dina. Culpepper, S. . (2015). Bayesian Estimation DINA Model Gibbs Sampling. Journal Educational Behavioral Statistics. 40, 454-476. DOI: 10.3102/1076998615595403.","code":"@Manual{,   title = {{dina: Bayesian Estimation of DINA Model}},   author = {Steven Andrew Culpepper and James Joseph Balamuta},   year = {2019}, } @Article{,   title = {{Bayesian Estimation of the DINA Model With Gibbs Sampling}},   author = {Steven Andrew Culpepper},   journal = {Journal of Educational and Behavioral Statistics},   year = {2015},   url = {https://doi.org/10.3102/1076998615595403},   volume = {40},   number = {5},   pages = {454-476},   doi = {10.3102/1076998615595403}, }"},{"path":"/index.html","id":null,"dir":"","previous_headings":"","what":"Bayesian Estimation of DINA Model","title":"Bayesian Estimation of DINA Model","text":"Estimate Deterministic Input, Noisy Gate (DINA) cognitive diagnostic model parameters using Gibbs sampler described Culpepper (2015) <doi: 10.3102/1076998615595403>.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Estimation of DINA Model","text":"can install dina CRAN using: , can cutting-edge development version GitHub using:","code":"install.packages(\"dina\") if(!requireNamespace(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"tmsalab/dina\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Bayesian Estimation of DINA Model","text":"use dina package, load R using: , DINA CDM can estimated using: simulate item data DINA, use:","code":"library(\"dina\") dina_model = dina(<data>, <q>, chain_length = 10000) # Set a seed for reproducibility set.seed(888)  # Setup Parameters N = 15   # Number of Examinees / Subjects J = 10   # Number of Items K = 2    # Number of Skills / Attributes  # Assign slipping and guessing values for each item ss = gs = rep(.2, J)  # Simulate identifiable Q matrix Q = sim_q_matrix(J, K)  # Simulate subject attributes subject_alphas = sim_subject_attributes(N, K)  # Simulate Item Data items_dina = sim_dina_items(subject_alphas, Q, ss, gs)"},{"path":"/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Bayesian Estimation of DINA Model","text":"Steven Andrew Culpepper James Joseph Balamuta","code":""},{"path":"/index.html","id":"citing-the-dina-package","dir":"","previous_headings":"","what":"Citing the dina package","title":"Bayesian Estimation of DINA Model","text":"ensure future development package, please cite dina package used analysis simulation studies. Citation information package may acquired using R:","code":"citation(\"dina\")"},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Bayesian Estimation of DINA Model","text":"GPL (>= 2)","code":""},{"path":"/reference/DINA_Gibbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions — DINA_Gibbs","title":"Deprecated functions — DINA_Gibbs","text":"Functions found within help documentation deprecated.","code":""},{"path":"/reference/DINA_Gibbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions — DINA_Gibbs","text":"","code":"DINA_Gibbs(...)"},{"path":"/reference/DINA_Gibbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated functions — DINA_Gibbs","text":"... Old parameters","code":""},{"path":"/reference/DINA_Gibbs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deprecated functions — DINA_Gibbs","text":"Deprecated functions DINA_Gibbs favor dina","code":""},{"path":"/reference/dina-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dina: Bayesian Estimation of DINA Model — dina-package","title":"dina: Bayesian Estimation of DINA Model — dina-package","text":"Estimate Deterministic Input, Noisy \"\" Gate (DINA) cognitive diagnostic model parameters using Gibbs sampler described Culpepper (2015) doi:10.3102/1076998615595403 .","code":""},{"path":[]},{"path":"/reference/dina-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dina: Bayesian Estimation of DINA Model — dina-package","text":"Maintainer: James Joseph Balamuta balamut2@illinois.edu (ORCID) Authors: Steven Andrew Culpepper sculpepp@illinois.edu (ORCID) [copyright holder]","code":""},{"path":"/reference/dina.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Posterior Distribution with Gibbs sampler — dina","title":"Generate Posterior Distribution with Gibbs sampler — dina","text":"Function sampling parameters full conditional distributions. function returns list arrays matrices parameter posterior samples. Note output includes posterior samples objects.","code":""},{"path":"/reference/dina.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Posterior Distribution with Gibbs sampler — dina","text":"","code":"dina(Y, Q, chain_length = 10000)"},{"path":"/reference/dina.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Posterior Distribution with Gibbs sampler — dina","text":"Y \\(N \\times J\\) matrix observed responses. Q \\(N \\times K\\) matrix indicating skills required items. chain_length Number MCMC iterations.","code":""},{"path":"/reference/dina.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Posterior Distribution with Gibbs sampler — dina","text":"list samples posterior distribution entry named: CLASSES = individual attribute profiles, PIs = latent class proportions, SigS = item slipping parameters, GamS = item guessing parameters.","code":""},{"path":[]},{"path":"/reference/dina.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate Posterior Distribution with Gibbs sampler — dina","text":"Steven Andrew Culpepper James Joseph Balamuta","code":""},{"path":"/reference/dina.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Posterior Distribution with Gibbs sampler — dina","text":"","code":"if (FALSE) { # \\dontrun{  #################################### # Tatsuoka Fraction Subtraction Data ####################################  # This example requires data from the CDM package. if(requireNamespace(\"CDM\")) {  data(fraction.subtraction.data, package = \"CDM\") data(fraction.subtraction.qmatrix, package = \"CDM\") Y_1984 = as.matrix(fraction.subtraction.data) Q_1984 = as.matrix(fraction.subtraction.qmatrix) K_1984 = ncol(fraction.subtraction.qmatrix) J_1984 = ncol(Y_1984)      # Creating matrix of possible attribute profiles As_1984 = rep(0, K_1984)  for(j in 1:K_1984) {     temp = combn(1:K_1984, m = j)     tempmat = matrix(0, ncol(temp), K_1984)     for(j in 1:ncol(temp)) tempmat[j, temp[, j]] = 1     As_1984 = rbind(As_1984, tempmat) }  As_1984 = as.matrix(As_1984)              # Generate samples from posterior distribution # May take 8 minutes chainLength = 5000 burnin = 1000 chain_samples = burnin:chainLength  outchain_1984 = dina(Y = Y_1984, Q = Q_1984,                      chain_length = chainLength)  # Summarize posterior samples for g and 1-s mgs_1984 = apply(outchain_1984$GamS[, chain_samples], 1, mean) sgs_1984 = apply(outchain_1984$GamS[, chain_samples], 1, sd) mss_1984 = 1 - apply(outchain_1984$SigS[, chain_samples], 1, mean) sss_1984 = apply(outchain_1984$SigS[, chain_samples], 1, sd) output_1984 = cbind(mgs_1984, sgs_1984, mss_1984, sss_1984) colnames(output_1984) = c('g Est','g SE','1-s Est','1-s SE') rownames(output_1984) = colnames(Y_1984) print(output_1984, digits = 3)                      # Summarize marginal skill distribution using posterior samples for latent # class proportions marg_PIs = t(As_1984) %*% outchain_1984$PIs PI_Est = apply(marg_PIs[, chain_samples], 1, mean) PI_Sd = apply(marg_PIs[, chain_samples], 1, sd) PIoutput = cbind(PI_Est, PI_Sd) colnames(PIoutput) = c('EST', 'SE') rownames(PIoutput) = paste('Skill', 1:K_1984) print(PIoutput, digits = 3)  }  ####################################################### # de la Torre (2009) Simulation Replication w/ N = 200 ####################################################### N = 200 K = 5 J = 30 delta0 = rep(1, 2^K)  # Creating Q matrix Q = matrix(rep(diag(K), 2), 2*K, K, byrow = TRUE)  for(mm in 2:K) {     temp = combn(1:K, m = mm)     tempmat = matrix(0, ncol(temp), K)     for(j in 1:ncol(temp)) tempmat[j, temp[, j]] = 1     Q = rbind(Q, tempmat) }  Q = Q[1:J,]      # Setting item parameters and generating attribute profiles ss = gs = rep(.2, J) PIs = rep(1/(2^K), 2^K) CLs = c(1:(2^K)) %*% rmultinom(n = N, size = 1, prob = PIs)          # Defining matrix of possible attribute profiles As = rep(0,K)  for(j in 1:K) {     temp = combn(1:K, m = j)     tempmat = matrix(0, ncol(temp), K)     for(j in 1:ncol(temp)) tempmat[j, temp[, j]] = 1     As = rbind(As, tempmat) }  As = as.matrix(As)                  # Sample true attribute profiles Alphas = As[CLs,]                  # Simulate data under DINA model  Y_sim = simcdm::sim_dina_items(Alphas, Q, ss, gs)                      ## Execute MCMC DINA routine ----  # NOTE: This example uses a small chain length to reduce  # computation time to illustrate the pedagogical concept. # In a real-life scenario, increase the chain length to # at least 5,000.  chainLength = 200 burnin = 100                      outchain = dina(Y_sim, Q, chain_length = chainLength)      ## Summarize posterior samples for g and 1-s ----  chain_samples = burnin:chainLength mGs = apply(outchain$GamS[, chain_samples], 1, mean) sGs = apply(outchain$GamS[, chain_samples], 1, sd) m1mSS = 1 - apply(outchain$SigS[, chain_samples], 1, mean) s1mSS = apply(outchain$SigS[, chain_samples], 1, sd) output = cbind(mGs, sGs, m1mSS, s1mSS) colnames(output) = c('g Est', 'g SE', '1-s Est', '1-s SE') rownames(output) = paste('Item', 1:J) print(output, digits = 3)                              ## Summarize marginal skill distribution ----   # Via posterior samples for latent class proportions PIoutput = cbind(apply(outchain$PIs, 1, mean), apply(outchain$PIs, 1, sd)) colnames(PIoutput) = c('EST', 'SE') rownames(PIoutput) = apply(As, 1, paste0, collapse='') print(PIoutput, digits = 3) } # }"},{"path":[]},{"path":"/news/index.html","id":"changes-2-0-2","dir":"Changelog","previous_headings":"","what":"Changes","title":"dina 2.0.2","text":"Added explicit dependencies R (>= 4.3.0), Rcpp (>= 1.1.0), RcppArmadillo (>= 15.0.2-2) Removed CXX11 src/Makevars src/Makevars.win avoid potential compilation issues newer versions Armadillo RcppArmadillo. Switched README.Rmd README.qmd use Quarto rendering. Fixed CITATION file use c() instead personList() bibentry() avoid CRAN check notes. Updated GitHub Action workflows.","code":""},{"path":[]},{"path":"/news/index.html","id":"documentation-2-0-1","dir":"Changelog","previous_headings":"","what":"Documentation","title":"dina 2.0.1","text":"Added pkgdown website deploys https://tmsalab.github.io/dina/ Remove manual escape % auto-escaped roxygen2 v7.0.0. Update README","code":""},{"path":"/news/index.html","id":"deployment-2-0-1","dir":"Changelog","previous_headings":"","what":"Deployment","title":"dina 2.0.1","text":"Changed Travis-CI GitHub Actions (#7)","code":""},{"path":"/news/index.html","id":"dina-200","dir":"Changelog","previous_headings":"","what":"dina 2.0.0","title":"dina 2.0.0","text":"CRAN release: 2019-02-01","code":""},{"path":"/news/index.html","id":"api-breakage-2-0-0","dir":"Changelog","previous_headings":"","what":"API Breakage","title":"dina 2.0.0","text":"Deprecated DINA_Gibbs() favor dina(), generates correct alpha matrix (Amat) inside function instead relying user set . call estimate gibbs sampling technique now: dina(Y, Q, chain_length)","code":""},{"path":"/news/index.html","id":"changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"dina 2.0.0","text":"Switched internal portions package use simcdm C++ routines imported R level-routines. Switched src/init.c autogeneration via Rcpp 0.12.15 Removed miscellaneous RNG seed.","code":""},{"path":"/news/index.html","id":"documentation-2-0-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"dina 2.0.0","text":"Enabled markdown inline documentiona roxygen2. Improved documentation flow","code":""},{"path":"/news/index.html","id":"deployment-2-0-0","dir":"Changelog","previous_headings":"","what":"Deployment","title":"dina 2.0.0","text":"Added TMSA Lab’s Travis-CI configuration testing across R versions. Added Unit Tests model reproducibility. Added code coverage results.","code":""},{"path":"/news/index.html","id":"dina-102","dir":"Changelog","previous_headings":"","what":"dina 1.0.2","title":"dina 1.0.2","text":"CRAN release: 2017-04-26 Addressed R 3.4 registration requirements. Added URL GitHub repository.","code":""},{"path":"/news/index.html","id":"dina-101","dir":"Changelog","previous_headings":"","what":"dina 1.0.1","title":"dina 1.0.1","text":"CRAN release: 2015-10-28 Fixed notation examples computation code.","code":""},{"path":"/news/index.html","id":"dina-100","dir":"Changelog","previous_headings":"","what":"dina 1.0.0","title":"dina 1.0.0","text":"Initial release dina package.","code":""}]
